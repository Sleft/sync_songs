# -*- mode:org; indent-tabs-mode:nil; tab-width:2 -*-
#+title: Plan

* TODO Plan
- Use https://gist.github.com/fnichol/1912050
- Remove =lov = [lov] unless lov.is_a?(Array)= from last_fm_set.rb if https://github.com/youpy/ruby-lastfm/issues/52 is fixed.
- Go through all documentation and fix it.
- Fix all warnings upstream.
- Go through all public methods and check interface before release.
- Add tests for all new things.
  - Add tests for songs with album.
- Use watir for testing last.fm auth.
- Use safe version operators in gemspec.
- Add examples to documentation as in the Tomdoc specification.
- Add argument types to documentation, from Tomdoc: "The expected type (or types) of each argument SHOULD be clearly indicated in the explanation. When you specify a type, use the proper classname of the type (for instance, use 'String' instead of 'string' to refer to a String type)."
- Write a guide for adding new services.
- Make singleton classes that can carry API keys and passwords for a particular user so that one can check if such an instance is running and use it rather than asking the user for the same password again.
- Consider adding support for the following: librefm, rhythmbox, gogoyoko, jamendo.
- Use YAML.dump and lib tmpdir to store Last.fm token?
- Include the README in the documentation of the main class.
- Integrate with Travis CI to automate tests.
** Gem
- Use Bundler and Rake (PickAxe p. 22-230) to create a gem.
- Refer from gemspec to main test suite via =s.test_file=.
- Filter out relevant files for inclusion in gem via =candidates= and =Dir.glob=.
- Run tomdoc via command similar to =s.has_rdoc= and =s.extra_rdoc_files=.
- Add dependicies to Ruby wrappers for GrooveShark and Last.fm.
- Add it to RubyForge.
- Used gems:
  - sudo gem install grooveshark
  - sudo gem install lastfm
  - sudo gem install launchy
  - sudo gem install thor
  - sudo gem install highline
